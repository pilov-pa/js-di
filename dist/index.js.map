{"version":3,"sources":["../src/index.js"],"names":["DI","name","className","args","shared","tags","services","Service","hasOwnProperty","Error","tag","result","serviceName","service","indexOf","push","resolve","parameters","parameterName","compiled","resolvedArgs","arg","resolvedArg","processedArgName","substring","Reflect","construct"],"mappings":"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","sourcesContent":["import Service from './Service';\r\n\r\nexport default class DI {\r\n    services = {};\r\n\r\n    parameters = {};\r\n\r\n    add(name, className, args = [], shared = true, tags = []) {\r\n        if (typeof name === 'object') {\r\n            this.services[name.name] = new Service(\r\n                name.name,\r\n                name.class,\r\n                name.args,\r\n                name.shared,\r\n                name.tags,\r\n            );\r\n        } else {\r\n            if (this.services.hasOwnProperty(name)) {\r\n                throw new Error(\"Service '\" + name + \"' already exists\");\r\n            }\r\n\r\n            if (!(typeof className === 'function')) {\r\n                throw new Error(\"Parameter 'className' should be a class constructor\");\r\n            }\r\n\r\n            this.services[name] = new Service(name, className, args, shared, tags);\r\n        }\r\n    }\r\n\r\n    getByTag(tag) {\r\n        let result = [];\r\n        for (const serviceName in this.services) {\r\n            const service = this.services[serviceName];\r\n            if (service.tags.indexOf(tag) !== -1) {\r\n                result.push(this.resolve(serviceName));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    remove(name) {\r\n        if (typeof this.services[name] === 'undefined') {\r\n            throw new Error(\"Service '\" + name + \"' not found\");\r\n        }\r\n\r\n        delete this.services[name];\r\n    }\r\n\r\n    has(name) {\r\n        return !(typeof this.services[name] === 'undefined');\r\n    }\r\n\r\n    addParameters(parameters) {\r\n        for (let parameterName in parameters) {\r\n            if (this.parameters.hasOwnProperty(parameterName)) {\r\n                throw new Error(\"Parameter '\" + parameterName + \"' already exists\");\r\n            }\r\n            this.parameters[parameterName] = parameters[parameterName];\r\n        }\r\n    }\r\n\r\n    getParameter(parameterName) {\r\n        if (!this.parameters.hasOwnProperty(parameterName)) {\r\n            throw new Error(\"Parameter '\" + parameterName + \"' not found\");\r\n        }\r\n\r\n        return this.parameters[parameterName];\r\n    }\r\n\r\n    removeParameter(parameterName) {\r\n        if (!this.parameters.hasOwnProperty(parameterName)) {\r\n            throw new Error(\"Parameter '\" + parameterName + \"' not found\");\r\n        }\r\n\r\n        delete this.parameters[parameterName];\r\n    }\r\n\r\n    resolve(name) {\r\n        if (!this.services[name]) {\r\n            throw new Error(\"Service '\" + name + \"' not found\");\r\n        }\r\n\r\n        const service = this.services[name];\r\n\r\n        if (typeof service.className === 'function') {\r\n            if (service.shared && service.compiled !== null) {\r\n                return service.compiled;\r\n            }\r\n\r\n            const args = service.args;\r\n            let resolvedArgs = [];\r\n            for (let arg of args) {\r\n                let resolvedArg;\r\n                if (arg.indexOf('@') === 0) {\r\n                    const processedArgName = arg.substring(1);\r\n\r\n                    if (!this.parameters.hasOwnProperty(processedArgName)) {\r\n                        throw new Error(\"Parameter '\" + processedArgName + \"' not found\");\r\n                    }\r\n\r\n                    resolvedArg = this.parameters[processedArgName];\r\n                } else {\r\n                    resolvedArg = this.resolve(arg);\r\n                }\r\n                resolvedArgs.push(resolvedArg);\r\n            }\r\n            const className = service.className;\r\n            const result = Reflect.construct(className, resolvedArgs);\r\n            if (service.shared) {\r\n                service.compiled = result;\r\n            }\r\n            return result;\r\n        }\r\n\r\n        return service.className;\r\n    }\r\n}\r\n"],"file":"index.js"}